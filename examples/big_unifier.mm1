delimiter $ ( ) $;
provable sort wff;
sort val;
term eq: val > val > wff;
infixl eq: $=$ prec 0;
axiom refl: $ a = a $;
term A: val > val > val;
infixl A: $+$ prec 1;
term _0: val;

axiom foo
  (h: $ ((((((((((((((((((((_0 + _0) + x1) + x2) + x3) + x4) + x5) + x6) + x7) + x8) + x9) +
      x10) + x11) + x12) + x13) + x14) + x15) + x16) + x17) + x18) + x19) + x20 =
    x20 + (x19 + (x18 + (x17 + (x16 + (x15 + (x14 + (x13 + (x12 + (x11 + (x10 +
      (x9 + (x8 + (x7 + (x6 + (x5 + (x4 + (x3 + (x2 + (x1 + (_0 + _0)))))))))))))))))))) $):
  $ _0 = _0 $;

--| This theorem is an example of a worst case for first order unification, producing a proof term
--| nominally of size 2^20. Because MM0 uses deduplicated terms under the hood, this can
--| be elaborated into a proof and checked in linear time.
--| (Just don't hover over `foo` or `refl` to print the types that were inferred, because it will
--| probably kill vscode and/or the server.)
theorem bar: $ _0 = _0 $ = '(foo refl);